{"ast":null,"code":"import _regeneratorRuntime from\"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from\"react\";import Form from\"react-bootstrap/Form\";import{CardElement,injectStripe}from\"react-stripe-elements\";import LoaderButton from\"./LoaderButton\";import{useFormFields}from\"../libs/hooksLib\";import\"./BillingForm.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BillingForm(_ref){var isLoading=_ref.isLoading,onSubmit=_ref.onSubmit,props=_objectWithoutProperties(_ref,[\"isLoading\",\"onSubmit\"]);var _useFormFields=useFormFields({name:\"\",storage:\"\"}),_useFormFields2=_slicedToArray(_useFormFields,2),fields=_useFormFields2[0],handleFieldChange=_useFormFields2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isProcessing=_useState2[0],setIsProcessing=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCardComplete=_useState4[0],setIsCardComplete=_useState4[1];isLoading=isProcessing||isLoading;function validateForm(){return fields.name!==\"\"&&fields.storage!==\"\"&&isCardComplete;}function handleSubmitClick(_x){return _handleSubmitClick.apply(this,arguments);}function _handleSubmitClick(){_handleSubmitClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _yield$props$stripe$c,token,error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();setIsProcessing(true);_context.next=4;return props.stripe.createToken({name:fields.name});case 4:_yield$props$stripe$c=_context.sent;token=_yield$props$stripe$c.token;error=_yield$props$stripe$c.error;setIsProcessing(false);onSubmit(fields.storage,{token:token,error:error});case 9:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmitClick.apply(this,arguments);}return/*#__PURE__*/_jsxs(Form,{className:\"BillingForm\",onSubmit:handleSubmitClick,children:[/*#__PURE__*/_jsxs(Form.Group,{size:\"lg\",controlId:\"storage\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Storage\"}),/*#__PURE__*/_jsx(Form.Control,{min:\"0\",type:\"number\",value:fields.storage,onChange:handleFieldChange,placeholder:\"Number of notes to store\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(Form.Group,{size:\"lg\",controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Cardholder's name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",value:fields.name,onChange:handleFieldChange,placeholder:\"Name on the card\"})]}),/*#__PURE__*/_jsx(Form.Label,{children:\"Credit Card Info\"}),/*#__PURE__*/_jsx(CardElement,{className:\"card-field\",onChange:function onChange(e){return setIsCardComplete(e.complete);},style:{base:{fontSize:\"16px\",color:\"#495057\",fontFamily:\"'Open Sans', sans-serif\"}}}),/*#__PURE__*/_jsx(LoaderButton,{block:true,size:\"lg\",type:\"submit\",isLoading:isLoading,disabled:!validateForm(),children:\"Purchase\"})]});}export default injectStripe(BillingForm);","map":{"version":3,"sources":["/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/src/components/BillingForm.js"],"names":["React","useState","Form","CardElement","injectStripe","LoaderButton","useFormFields","BillingForm","isLoading","onSubmit","props","name","storage","fields","handleFieldChange","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","validateForm","handleSubmitClick","event","preventDefault","stripe","createToken","token","error","e","complete","base","fontSize","color","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\",\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return fields.name !== \"\" && fields.storage !== \"\" && isCardComplete;\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({\n      name: fields.name,\n    });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <Form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <Form.Group size=\"lg\" controlId=\"storage\">\n        <Form.Label>Storage</Form.Label>\n        <Form.Control\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </Form.Group>\n      <hr />\n      <Form.Group size=\"lg\" controlId=\"name\">\n        <Form.Label>Cardholder&apos;s name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </Form.Group>\n      <Form.Label>Credit Card Info</Form.Label>\n      <CardElement\n        className=\"card-field\"\n        onChange={(e) => setIsCardComplete(e.complete)}\n        style={{\n          base: {\n            fontSize: \"16px\",\n            color: \"#495057\",\n            fontFamily: \"'Open Sans', sans-serif\",\n          },\n        }}\n      />\n      <LoaderButton\n        block\n        size=\"lg\"\n        type=\"submit\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </Form>\n  );\n}\n\nexport default injectStripe(BillingForm);"]},"metadata":{},"sourceType":"module"}