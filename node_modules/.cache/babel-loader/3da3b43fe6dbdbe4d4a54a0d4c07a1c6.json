{"ast":null,"code":"var _jsxFileName = \"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/src/containers/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n\n  const file = useRef(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const {\n          content,\n          attachment\n        } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${id}`, {\n      body: note\n    });\n  }\n\n  async function handleSubmit(event) {\n    let attachment;\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB.`);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n\n      await saveNote({\n        content,\n        attachment: attachment || note.attachment\n      });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleDelete(event) {\n    event.preventDefault();\n    const confirmed = window.confirm(\"Are you sure you want to delete this note?\");\n\n    if (!confirmed) {\n      return;\n    }\n\n    setIsDeleting(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Notes\",\n    children: note && /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"file\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Attachment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), note.attachment && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: note.attachmentURL,\n            children: formatFilename(note.attachment)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: handleFileChange,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        isLoading: isLoading,\n        disabled: !validateForm(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        size: \"lg\",\n        variant: \"danger\",\n        onClick: handleDelete,\n        isLoading: isDeleting,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Notes, \"3/+iOQRr9As3KEwPypSNJVrHAAY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/src/containers/Notes.js"],"names":["React","useRef","useState","useEffect","useParams","useHistory","API","Storage","onError","Form","LoaderButton","config","s3Upload","Notes","file","id","history","note","setNote","content","setContent","isLoading","setIsLoading","isDeleting","setIsDeleting","loadNote","get","onLoad","attachment","attachmentURL","vault","e","validateForm","length","formatFilename","str","replace","handleFileChange","event","current","target","files","saveNote","put","body","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","push","handleDelete","confirmed","window","confirm","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport \"./Notes.css\";\nimport { s3Upload } from \"../libs/awsLib\";\n\nexport default function Notes() {\n  const file = useRef(null);\n  const { id } = useParams();\n  const history = useHistory();\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n  function validateForm() {\n  return content.length > 0;\n}\n\nfunction formatFilename(str) {\n  return str.replace(/^\\w+-/, \"\");\n}\n\nfunction handleFileChange(event) {\n  file.current = event.target.files[0];\n}\n\nfunction saveNote(note) {\n  return API.put(\"notes\", `/notes/${id}`, {\n    body: note\n  });\n}\n\nasync function handleSubmit(event) {\n  let attachment;\n\n  event.preventDefault();\n\n  if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n    alert(\n      `Please pick a file smaller than ${\n        config.MAX_ATTACHMENT_SIZE / 1000000\n      } MB.`\n    );\n    return;\n  }\n\n  setIsLoading(true);\n\n  try {\n    if (file.current) {\n      attachment = await s3Upload(file.current);\n    }\n\n    await saveNote({\n      content,\n      attachment: attachment || note.attachment\n    });\n    history.push(\"/\");\n  } catch (e) {\n    onError(e);\n    setIsLoading(false);\n  }\n}\n\nasync function handleDelete(event) {\n  event.preventDefault();\n\n  const confirmed = window.confirm(\n    \"Are you sure you want to delete this note?\"\n  );\n\n  if (!confirmed) {\n    return;\n  }\n\n  setIsDeleting(true);\n}\n\nreturn (\n  <div className=\"Notes\">\n    {note && (\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"content\">\n          <Form.Control\n            as=\"textarea\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"file\">\n          <Form.Label>Attachment</Form.Label>\n          {note.attachment && (\n            <p>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={note.attachmentURL}\n              >\n                {formatFilename(note.attachment)}\n              </a>\n            </p>\n          )}\n          <Form.Control onChange={handleFileChange} type=\"file\" />\n        </Form.Group>\n        <LoaderButton\n          block\n          size=\"lg\"\n          type=\"submit\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Save\n        </LoaderButton>\n        <LoaderButton\n          block\n          size=\"lg\"\n          variant=\"danger\"\n          onClick={handleDelete}\n          isLoading={isDeleting}\n        >\n          Delete\n        </LoaderButton>\n      </Form>\n    )}\n  </div>\n);\n}"]},"metadata":{},"sourceType":"module"}