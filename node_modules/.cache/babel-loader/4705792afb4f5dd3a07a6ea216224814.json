{"ast":null,"code":"var _jsxFileName = \"/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/src/containers/NewNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewNote() {\n  _s();\n\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(`Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE / 1000000} MB.`);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const attachment = file.current ? await s3Upload(file.current) : null;\n      await createNote({\n        content,\n        attachment\n      });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewNote\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: content,\n          as: \"textarea\",\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"file\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Attachment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: handleFileChange,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        type: \"submit\",\n        size: \"lg\",\n        variant: \"primary\",\n        isLoading: isLoading,\n        disabled: !validateForm(),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewNote, \"O06htyaSw78Jg6piYlj1w8TspE0=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewNote\");","map":{"version":3,"sources":["/Users/linyue/Documents/amanda/spring2021/cloud_special_topics/notes-app-client/src/containers/NewNote.js"],"names":["React","useRef","useState","Form","useHistory","LoaderButton","onError","config","API","NewNote","file","history","content","setContent","isLoading","setIsLoading","validateForm","length","handleFileChange","event","current","target","files","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","attachment","s3Upload","createNote","push","e","note","post","body","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\n\n\nexport default function NewNote() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n  event.preventDefault();\n\n  if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n    alert(\n      `Please pick a file smaller than ${\n        config.MAX_ATTACHMENT_SIZE / 1000000\n      } MB.`\n    );\n    return;\n  }\n\n  setIsLoading(true);\n\n  try {\n    const attachment = file.current ? await s3Upload(file.current) : null;\n\n    await createNote({ content, attachment });\n    history.push(\"/\");\n  } catch (e) {\n    onError(e);\n    setIsLoading(false);\n  }\n}\n\n\nfunction createNote(note) {\n  return API.post(\"notes\", \"/notes\", {\n    body: note\n  });\n}\n\n  return (\n    <div className=\"NewNote\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"content\">\n          <Form.Control\n            value={content}\n            as=\"textarea\"\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"file\">\n          <Form.Label>Attachment</Form.Label>\n          <Form.Control onChange={handleFileChange} type=\"file\" />\n        </Form.Group>\n        <LoaderButton\n          block\n          type=\"submit\"\n          size=\"lg\"\n          variant=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </Form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}